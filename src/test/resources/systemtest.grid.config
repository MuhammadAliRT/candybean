#automation.framework = webdriver
automation.interface = chrome

browser.firefox.binary = {\
	"linux": "/usr/bin/firefox", \
	"mac": "/Applications/Firefox 19.0.2.app/Contents/MacOS/firefox", \
	"windows": "C:/Program Files (x86)/Mozilla Firefox/firefox.exe"}
browser.firefox.profile = default

browser.chrome.driver.path = {\
	"linux": "./lib/chromedriver-linux64", \
	"mac": "./lib/chromedriver-mac32", \
	"windows": "./lib/chromedriver-win32.exe"}
browser.chrome.driver.log.path = ./log/chromedriver.log

browser.ie.driver.path = ./lib/IEDriverServer-64.exe

perf.page.load.timeout = 2
perf.implicit.wait.seconds = 20

# Logging
handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# File logging
java.util.logging.FileHandler.pattern = ./log/candybean.%g.log
java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.FileHandler.level = INFO

# Console logging
java.util.logging.ConsoleHandler.level = ALL
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Logging format
java.util.logging.SimpleFormatter.format = [%1$tH:%1$tM:%1$tS:%1$tL] %4$s: %2$s %5$s%6$s%n

# Candybean Test Results Report Settings
testResultsReportPath=./target/candybean-reports/reports/CandybeanTestResults.html
testResultsReport.title=Candybean Test Results Report
testResultsReport.testsPerPage=8
surefireResultsDirectory=./target/surefire-reports

# Parallelization settings
parallel.enabled=false
parallel.threadNamePattern=candybean-thread
parallel.threads=8

# Grid Settings
grid.enabled=true
grid.ip=127.0.0.1
grid.port=4444
grid.platform=LINUX
grid.browser=chrome
